From 67185b5da578ed5db010e3fd4f4e3972c0c7548d Mon Sep 17 00:00:00 2001
From: Udo-Peter Steyer <ous8292@gmail.com>
Date: Fri, 27 Sep 2024 15:04:50 -0500
Subject: [PATCH] unvendoring libsndfile

---
 soundfile.py | 49 ++++---------------------------------------------
 1 file changed, 4 insertions(+), 45 deletions(-)

diff --git a/soundfile.py b/soundfile.py
index cc13192..11b9245 100644
--- a/soundfile.py
+++ b/soundfile.py
@@ -145,51 +145,10 @@ _ffi_types = {
     'int16': 'short'
 }
 
-try:  # packaged lib (in _soundfile_data which should be on python path)
-    if _sys.platform == 'darwin':
-        from platform import machine as _machine
-        _packaged_libname = 'libsndfile_' + _machine() + '.dylib'
-    elif _sys.platform == 'win32':
-        from platform import architecture as _architecture
-        _packaged_libname = 'libsndfile_' + _architecture()[0] + '.dll'
-    elif _sys.platform == 'linux':
-        from platform import machine as _machine
-        _packaged_libname = 'libsndfile_' + _machine() + '.so'
-    else:
-        raise OSError('no packaged library for this platform')
-
-    import _soundfile_data  # ImportError if this doesn't exist
-    _path = _os.path.dirname(_soundfile_data.__file__)  # TypeError if __file__ is None
-    _full_path = _os.path.join(_path, _packaged_libname)
-    _snd = _ffi.dlopen(_full_path)  # OSError if file doesn't exist or can't be loaded
-
-except (OSError, ImportError, TypeError):
-    try:  # system-wide libsndfile:
-        _libname = _find_library('sndfile')
-        if _libname is None:
-            raise OSError('sndfile library not found using ctypes.util.find_library')
-        _snd = _ffi.dlopen(_libname)
-
-    except OSError:
-        # Try explicit file name, if the general does not work (e.g. on nixos)
-        if _sys.platform == 'darwin':
-            _explicit_libname = 'libsndfile.dylib'
-        elif _sys.platform == 'win32':
-            _explicit_libname = 'libsndfile.dll'
-        elif _sys.platform == 'linux':
-            _explicit_libname = 'libsndfile.so'
-        else:
-            raise
-
-        # Homebrew on Apple M1 uses a `/opt/homebrew/lib` instead of
-        # `/usr/local/lib`. We are making sure we pick that up.
-        from platform import machine as _machine
-        if _sys.platform == 'darwin' and _machine() == 'arm64':
-            _hbrew_path = '/opt/homebrew/lib/' if _os.path.isdir('/opt/homebrew/lib/') \
-                else '/usr/local/lib/'
-            _snd = _ffi.dlopen(_os.path.join(_hbrew_path, _explicit_libname))
-        else:
-            _snd = _ffi.dlopen(_explicit_libname)
+_libname = _find_library('sndfile')
+if _libname is None:
+    raise OSError('sndfile library not found using ctypes.util.find_library')
+_snd = _ffi.dlopen(_libname)
 
 __libsndfile_version__ = _ffi.string(_snd.sf_version_string()).decode('utf-8', 'replace')
 if __libsndfile_version__.startswith('libsndfile-'):
-- 
2.39.3 (Apple Git-146)

